#!/usr/bin/env bash

usage() {
  echo "$@" >&2
  echo "usage : $(basename $0) [options]
  -g <GROUP> : restrict selection to this group (mandatory)
  -t <TYPE> : restrict selection to this type
  -d : also destroys all the VM in the group (DESTRUCTIVE)
  -h : display this help" >&2
  exit
}

realMe=$(readlink -e $0)
realDir=$(dirname ${realMe})
libDir=../lib
libName=cm_lib
[ -d "${realDir}/${libDir}" ]  || usage "${libDir} directory was not found in ${realDir} : Installation problem."
[ -f "${realDir}/${libDir}/${libName}" ] && . ${realDir}/${libDir}/${libName} || usage "${libName} was not found in ${realDir}/${libDir} : Installation problem."

groupName=
subGroupName="*"
destroy=0
while getopts g:t:dh name
do
  case $name in
    g) groupName="$OPTARG" ;;
    t) subGroupName="$OPTARG" ;;
    d) destroy=1 ;;
    h) usage ;;
  esac
done
shift $(($OPTIND-1))

[ -z ${groupName} ] && usage "group name is mandatory"
[ ${groupName} == ${vmCreateGroup} ] && usage "can't drop ${vmCreateGroup}"

vm_running "${groupName}" "${subGroupName}" | while read vmName vmGroup vmIp
do
  vmSubGroup=$(echo ${vmGroup} | cut -d "/" -f 2)
  vmGroup=$(echo ${vmGroup} | cut -d "/" -f 1)
  vm_stop ${vmName} ${vmGroup} ${vmSubGroup}
done

if [ $destroy -eq 1 ] ; then
  rm ${vmBaseDir}/${groupName}/${subGroupName}/*/*
  rmdir ${vmBaseDir}/${groupName}/${subGroupName}/*
  rmdir ${vmBaseDir}/${groupName}/${subGroupName} 2>/dev/null
  rmdir ${vmBaseDir}/${groupName}/ 2>/dev/null
fi
